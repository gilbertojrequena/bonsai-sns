plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'maven'
    id 'signing'
}

group 'io.github.gilbertojrequena'
version '0.1.3'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/jonnyzzz/maven' }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.ktor:ktor-server-netty:1.2.6'
    implementation 'io.ktor:ktor-client-apache:1.2.6'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.4'
    implementation 'org.jdom:jdom2:2.0.6'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'io.github.microutils:kotlin-logging:1.7.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'com.amazonaws:aws-java-sdk-sqs:1.11.694'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testCompile 'io.mockk:mockk:1.9.3'
    testCompile 'com.amazonaws:aws-java-sdk-sns:1.11.694'
    testCompile 'org.elasticmq:elasticmq-rest-sqs_2.12:0.15.3'
    testCompile 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    sign configurations.archives
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes('Main-Class': 'io.github.gilbertojrequena.bonsai_sns.MainKt')
    }
    from {
        configurations.compileClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'bonsai-sns'
                packaging 'jar'
                url 'https://github.com/gilbertojrequena/bonsai-sns'
                description """Is a simple async implementation of AWS SNS intended for executing 
                               tests or simulate environments locally"""

                scm {
                    connection 'scm:git:https://github.com/gilbertojrequena/bonsai-sns.git'
                    developerConnection 'scm:git:https://github.com/gilbertojrequena/bonsai-sns.git'
                    url 'https://github.com/gilbertojrequena/bonsai-sns.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'gilbertojrequena'
                        name 'Gilberto J Requena'
                        email 'gh.gilbertojrequena@fastmail.com'
                    }
                }
            }
        }
    }
}
